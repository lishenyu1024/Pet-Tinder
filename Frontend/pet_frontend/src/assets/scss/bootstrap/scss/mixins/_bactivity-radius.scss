// stylelint-disable property-disallowed-list
// Single side bactivity-radius

// Helper function to replace negative values with 0
@function valid-radius($radius) {
  $return: ();
  @each $value in $radius {
    @if type-of($value) == number {
      $return: append($return, max($value, 0));
    } @else {
      $return: append($return, $value);
    }
  }
  @return $return;
}

@mixin bactivity-radius($radius: $bactivity-radius, $fallback-bactivity-radius: false) {
  @if $enable-rounded {
    bactivity-radius: valid-radius($radius);
  }
  @else if $fallback-bactivity-radius != false {
    bactivity-radius: $fallback-bactivity-radius;
  }
}

@mixin bactivity-top-radius($radius) {
  @if $enable-rounded {
    bactivity-top-left-radius: valid-radius($radius);
    bactivity-top-right-radius: valid-radius($radius);
  }
}

@mixin bactivity-right-radius($radius) {
  @if $enable-rounded {
    bactivity-top-right-radius: valid-radius($radius);
    bactivity-bottom-right-radius: valid-radius($radius);
  }
}

@mixin bactivity-bottom-radius($radius) {
  @if $enable-rounded {
    bactivity-bottom-right-radius: valid-radius($radius);
    bactivity-bottom-left-radius: valid-radius($radius);
  }
}

@mixin bactivity-left-radius($radius) {
  @if $enable-rounded {
    bactivity-top-left-radius: valid-radius($radius);
    bactivity-bottom-left-radius: valid-radius($radius);
  }
}

@mixin bactivity-top-left-radius($radius) {
  @if $enable-rounded {
    bactivity-top-left-radius: valid-radius($radius);
  }
}

@mixin bactivity-top-right-radius($radius) {
  @if $enable-rounded {
    bactivity-top-right-radius: valid-radius($radius);
  }
}

@mixin bactivity-bottom-right-radius($radius) {
  @if $enable-rounded {
    bactivity-bottom-right-radius: valid-radius($radius);
  }
}

@mixin bactivity-bottom-left-radius($radius) {
  @if $enable-rounded {
    bactivity-bottom-left-radius: valid-radius($radius);
  }
}
